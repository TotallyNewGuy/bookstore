// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.13.0
// source: book.sql

package db

import (
	"context"
)

const createBook = `-- name: CreateBook :one
INSERT INTO book (
  book_name,
  stock,
  price
) VALUES (
  $1, $2, $3
)
RETURNING book_id, book_name, stock, price
`

type CreateBookParams struct {
	BookName string  `json:"book_name"`
	Stock    int32   `json:"stock"`
	Price    float64 `json:"price"`
}

func (q *Queries) CreateBook(ctx context.Context, arg CreateBookParams) (Book, error) {
	row := q.queryRow(ctx, q.createBookStmt, createBook, arg.BookName, arg.Stock, arg.Price)
	var i Book
	err := row.Scan(
		&i.BookID,
		&i.BookName,
		&i.Stock,
		&i.Price,
	)
	return i, err
}

const updateBookStock = `-- name: UpdateBookStock :one
UPDATE book
set 
  stock = $2
WHERE book_id = $1
RETURNING book_id, book_name, stock, price
`

type UpdateBookStockParams struct {
	BookID int64 `json:"book_id"`
	Stock  int32 `json:"stock"`
}

func (q *Queries) UpdateBookStock(ctx context.Context, arg UpdateBookStockParams) (Book, error) {
	row := q.queryRow(ctx, q.updateBookStockStmt, updateBookStock, arg.BookID, arg.Stock)
	var i Book
	err := row.Scan(
		&i.BookID,
		&i.BookName,
		&i.Stock,
		&i.Price,
	)
	return i, err
}
