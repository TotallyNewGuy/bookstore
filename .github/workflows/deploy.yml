name: Deploy to ECR

on:
  push:
    # 这个操作只会在Github
    # 收到push操作的时候发生
    branches: [main]

jobs:
  depoly:
    name: Build images
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Install kubectl
        uses: azure/setup-kubectl@v2.0
        with:
          version: "v1.24.2" # default is latest stable
        id: install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Load secrets and save into app.env
        run: |
          cd grpc-order
          aws secretsmanager get-secret-value --secret-id bookstore_sm --query SecretString --output text | jq -r 'to_entries|map("\(.key)=\(.value)")|.[]' > app.env
          cd ../grpc-purchase
          aws secretsmanager get-secret-value --secret-id bookstore_sm --query SecretString --output text | jq -r 'to_entries|map("\(.key)=\(.value)")|.[]' > app.env
          cd ../grpc-java/userInfo-service/src/main/resources
          aws secretsmanager get-secret-value --secret-id bookstore_sm --query SecretString --output text | jq -r 'to_entries|map("\(.key)=\(.value)")|.[]' > application.properties
          cd ../../../../book-service/src/main/resources
          aws secretsmanager get-secret-value --secret-id bookstore_sm --query SecretString --output text | jq -r 'to_entries|map("\(.key)=\(.value)")|.[]' > application.properties
          cd ../../../../../

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: bookstore_ecr
          IMAGE_TAG: ${{ github.sha }}
          BOOK: book
          ORDER: order
          PURCHASE: purchase
          USERINFO: userinfo
        run: |
          echo 'build book service......'
          cd grpc-java/book-service
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$BOOK -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push -a $ECR_REGISTRY/$ECR_REPOSITORY:$BOOK

          echo 'build userinfo service......'
          # 切换目录是跟上面连着的
          # 上边进了那个文件夹
          # 后边要退出来
          cd ../userInfo-service
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$USERINFO -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push -a $ECR_REGISTRY/$ECR_REPOSITORY:$USERINFO

          echo 'build order service......'
          cd ../../grpc-order
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$ORDER -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push -a $ECR_REGISTRY/$ECR_REPOSITORY:$ORDER

          echo 'build purchase service......'
          cd ../grpc-purchase
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$PURCHASE -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$PURCHASE

      - name: Deploy image to Amazon EKS
        run: aws eks update-kubeconfig --name bookstore --region us-west-2

      # - name: Deploy image to Amazon EKS
      #   run: |
      #     cd ..
      #     kubectl apply -f eks/aws-auth.yaml
      #     kubectl apply -f eks/deployment.yaml
      #     kubectl apply -f eks/service.yaml
      #     kubectl apply -f eks/ingress.yaml
